version: '3.7'
services:
  fp_redis:
    container_name: fp_redis
    image: redis:4.0.11
    networks:
      - message

  fp_mongo:
    container_name: fp_mongo
    image: mongo:4.1.7-xenial
    ports:
      - 27017:27017
    volumes:
      - mdb-data:/data/db
    networks:
      - backend
      
  fp_postgres:
    image: fidelkang/fp_postgres
    build:
      context: ./fp_postgres
      dockerfile: Dockerfile
    container_name: fp_postgres
    env_file:
      - ./envfiles/.airflow_development.env
    networks:
      - airflow_backend
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data

  torproxy:
    image: u1234x1234/torpool:1.0.2
    command: ['--Tors', '150', '--NewCircuitPeriod', '240', '--MaxCircuitDirtiness', '240']
    container_name: torpool
    ports:
      - "9200:9200" #Socks
      - "9300:9300" #Http
      - "9500:9500" #Admin page
    networks:
      - backend

  fpcrawler:
    image: fidelkang/fpcrawler
    build:
      context: ./fpcrawler
      dockerfile: Dockerfile
    volumes:
      - './fpcrawler:/usr/src/app'
      - ./datacollections:/usr/src/app/datacollections
    command:  uvicorn main:app --reload --host 0.0.0.0 --port 5000 --log-level debug
    ports:
      - 5000:5000
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
    depends_on:
      - fp_redis
      - fp_mongo

    networks:
      - backend
      - message
      - logging

  fpgunicorn:
    image: fidelkang/fpcrawler
    volumes:
      - './fpcrawler:/usr/src/app'
      - ./datacollections:/usr/src/app/datacollections
    command:  gunicorn -b 0.0.0.0:9000 --log-level=debug --workers=6 -k uvicorn.workers.UvicornWorker -t 200000  main:app
    ports:
      - 9000:9000
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
    depends_on:
      - fp_redis
      - fp_mongo
    networks:
      - backend
      - message
      - logging  

  connector:
    image: fidelkang/connector
    container_name: connector
    build:
      context: ./connector
      dockerfile: Dockerfile
    volumes:
      - './connector:/usr/src/app'
      - ./datacollections:/usr/src/app/datacollections
      - ./marcap/data:/usr/src/app/datacollections/data
    command:  uvicorn main:app --reload --host 0.0.0.0 --port 8000 --log-level debug
    ports:
      - 8000:8000
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
      - ./envfiles/.mongo_env.env
    depends_on:
      - fp_redis
      - fp_mongo
    networks:
      - backend
      - message
      
  connector_worker:
    image: fidelkang/connector
    working_dir: /usr/src/app
    volumes:
      - ./connector:/usr/src/app
      - ./datacollections:/usr/src/app/datacollections
    command: celery -A celery_app:celery_app worker  --loglevel=INFO --concurrency=3
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
      - ./envfiles/.mongo_env.env
      - ./envfiles/.redis.env
    networks:
      - backend
      - message
    depends_on:
      - fp_redis
      - connector
    
  fp_airflow:
    image: fidelkang/fp_airflow
    container_name: fp_airflow
    build:
      context: ./fp_airflow
    depends_on:
      - fp_postgres
      - fpgunicorn
      - connector_worker
      - fp_mongo
    env_file:
      - ./envfiles/.airflow_development.env
      - ./envfiles/.service_map.env
    volumes:
      - ./fp_airflow:/usr/local/airflow/dags
      - ./fp_airflow/requirements.txt:/requirements.txt
      - ./datacollections:/usr/local/airflow/dags/datacollections
    ports:
        - "8080:8080"
    command: webserver
    networks:
      - airflow_backend
      - backend

    healthcheck:
        test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
        interval: 30s
        timeout: 30s
        retries: 3

    
volumes:
  media:
  mdb-data:
  postgres-data:

networks:
  backend:
  logging:
  message:
  airflow_backend:


configs:
  logstash.conf:
    external: true