version: '3.7'
services:
  fp_redis:
    container_name: fp_redis
    image: redis:4.0.11
    networks:
      - message

  fp_mongo:
    container_name: fp_mongo
    image: mongo:4.1.7-xenial
    ports:
      - 27017:27017
    volumes:
      - mdb-data:/data/db
    networks:
      - backend
      
  fp_postgres:
    image: fidelkang/fp_postgres
    build:
      context: ./fp_postgres
      dockerfile: Dockerfile
    container_name: fp_postgres
    env_file:
      - ./envfiles/.airflow_development.env
    networks:
      - airflow_backend
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data

  fpcrawler:
    image: fidelkang/fpcrawler
    container_name: fpcrawler
    build:
      context: ./fpcrawler
      dockerfile: Dockerfile
    volumes:
      - './fpcrawler:/usr/src/app'
      - ./datacollections:/usr/src/app/datacollections
      - ./fp_types:/usr/src/app/fp_types
    command:  python manage.py run -h 0.0.0.0 -p 5000
    ports:
      - 5000:5000
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
    depends_on:
      - fp_redis
      - fp_mongo

    networks:
      - backend
      - message
      - logging
  
  connector:
    image: fidelkang/connector
    container_name: connector
    build:
      context: ./connector
      dockerfile: Dockerfile
    volumes:
      - './connector:/usr/src/app'
      - ./datacollections:/usr/src/app/datacollections
      - ./marcap/data:/usr/src/app/datacollections/data
      - ./fp_types:/usr/src/app/fp_types
    command:  python manage.py run -h 0.0.0.0 -p 8000
    ports:
      - 8000:8000
    env_file:
      - ./envfiles/.base.env
      - ./envfiles/.secret.env
      - ./envfiles/.mongo_env.env
    depends_on:
      - fp_redis
      - fp_mongo
    networks:
      - backend

  fp_airflow:
    image: airflow
    container_name: fp_airflow
    build:
      context: ./fp_airflow
    depends_on:
      - fp_postgres
    env_file:
      - ./envfiles/.airflow_development.env
    volumes:
      - ./fp_airflow:/usr/local/airflow/dags
      - ./fp_airflow/requirements.txt:/requirements.txt
      - ./datacollections:/usr/local/airflow/dags/datacollections
      - ./fp_types:/usr/local/airflow/dags/fp_types
    ports:
        - "8080:8080"
    command: webserver
    networks:
      - airflow_backend
      - backend

    healthcheck:
        test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
        interval: 30s
        timeout: 30s
        retries: 3

    
volumes:
  media:
  mdb-data:
  postgres-data:

networks:
  backend:
  logging:
  message:
  airflow_backend:


configs:
  logstash.conf:
    external: true